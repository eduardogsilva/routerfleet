# Generated by Django 5.2 on 2025-04-23 12:24

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('router_manager', '0016_router_port'),
    ]

    operations = [
        migrations.AlterField(
            model_name='router',
            name='router_type',
            field=models.CharField(choices=[('monitoring', 'Monitoring Only'), ('routeros', 'Mikrotik (RouterOS)'), ('routeros-branded', 'Mikrotik (Branded)'), ('openwrt', 'OpenWRT')], max_length=100),
        ),
        migrations.CreateModel(
            name='RouterInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('success', models.BooleanField(default=False)),
                ('error', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('next_retry', models.DateTimeField(blank=True, null=True)),
                ('last_retrieval', models.DateTimeField(blank=True, null=True)),
                ('host_id', models.CharField(blank=True, max_length=100, null=True)),
                ('model_name', models.CharField(blank=True, max_length=100, null=True)),
                ('model_version', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('os_version', models.CharField(blank=True, max_length=100, null=True)),
                ('firmware_version', models.CharField(blank=True, max_length=100, null=True)),
                ('architecture', models.CharField(blank=True, max_length=100, null=True)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('router', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='router_manager.router')),
            ],
        ),
    ]
